package com.merittrac.apollo.acs.services;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Calendar;
import java.util.List;

import com.merittrac.apollo.acs.dataobject.PaginationDataDO;
import com.merittrac.apollo.acs.dataobject.ScheduledBatchDataDO;
import com.merittrac.apollo.acs.entities.AcsBatch;
import com.merittrac.apollo.acs.exception.BatchNotFoundException;
import com.merittrac.apollo.core.exception.GenericDataModelException;

public interface IBatchService {
	/**
	 * Persists the batch details.
	 * 
	 * @param batchDetails
	 *            {@link BatchDetailsTO} object.
	 * @return {@link Boolean}
	 * @throws GenericDataModelException
	 */
	public boolean setBatchDetails(AcsBatch batchDetails) throws GenericDataModelException;

	/**
	 * Updates the batch details.
	 * 
	 * @param batchDetails
	 *            {@link BatchDetailsTO} object.
	 * @return {@link BatchDetailsTO}
	 * @throws GenericDataModelException
	 */
	public AcsBatch updateBatchDetails(AcsBatch batchDetails, boolean isMerge, List<String> packIds)
			throws GenericDataModelException;

	/**
	 * Gets the BatchDetails object for a given batchCode.
	 * 
	 * @param batchCode
	 * @return {@link BatchDetailsTO} object.
	 * @throws GenericDataModelException
	 */
	public AcsBatch getBatchDetails(String customerName, String divisionName, String eventName, String batchCode)
			throws GenericDataModelException;

	/**
	 * Gets the List of batch details for a list of batchCodes.
	 * 
	 * @param batchCodesList
	 * @return List of {@link BatchDetailsTO} objects.
	 * @throws GenericDataModelException
	 */
	public List<AcsBatch> getBatchDetailsList(List<String> batchCodesList) throws GenericDataModelException;

	/**
	 * Gets count of batch details result set for a specific customer,division,event and batchCode.
	 * 
	 * @param customerName
	 * @param divisionName
	 * @param eventName
	 * @param batchCode
	 * @return {@link Integer}
	 * @throws GenericDataModelException
	 */
	public int getBatchDetailsCount(String customerName, String divisionName, String eventName, String batchCode)
			throws GenericDataModelException;

	/**
	 * Gets list of batches(with minimal batch data and status of all packs associated for those batches) for a specific
	 * customer,division and event within the date range if specified.
	 * 
	 * @param customerName
	 * @param divisionName
	 * @param eventName
	 * @param fromDate
	 * @param toDate
	 * @return List of {@link ScheduledBatchDataDO} objects.
	 * @throws GenericDataModelException
	 */
	public PaginationDataDO getscheduledBatchData(int customerId, int divisionId, int eventId, Calendar fromDate,
			Calendar toDate, int startIndex, int count) throws GenericDataModelException;

	/**
	 * Returns the auto generated Id(generated by DB) for a batch based on batch Identifier.
	 * 
	 * @param batchCode
	 * @return {@link Integer}
	 * @throws GenericDataModelException
	 */
	public int getBatchIdbyBatchCode(String batchCode) throws GenericDataModelException;

	public List<String> getBatchIdsbyTimeInstance() throws GenericDataModelException, FileNotFoundException,
			IOException;

	// public int getBatchIdbyCandId(int candId) throws
	// GenericDataModelException, FileNotFoundException, IOException,
	// CandidateRejectedException;

	public boolean deleteQPAllocationByBatchCode(String batchCode) throws GenericDataModelException,
			BatchNotFoundException;

	public String getExitSequence() throws GenericDataModelException;

	/**
	 * Load {@link AcsBatch} based on primary key batchCode.
	 * 
	 * @param batchCode
	 * @return
	 * @throws GenericDataModelException
	 */
	public AcsBatch loadBatch(String batchCode) throws GenericDataModelException;
}
